{
  "uuid": "fd8920a131234b32b0107f1ad19958f9",
  "historyId": "GetbyId",
  "fullName": "GetbyId",
  "labels": [
    {
      "name": "thread",
      "value": "NonParallelWorker"
    },
    {
      "name": "host",
      "value": "fv-az1246-752"
    },
    {
      "name": "feature",
      "value": "GetPosts"
    },
    {
      "name": "tag",
      "value": "tag1"
    },
    {
      "name": "tag",
      "value": "smoke"
    },
    {
      "name": "tag",
      "value": "regression"
    }
  ],
  "links": [],
  "name": "GetbyId",
  "status": "failed",
  "statusDetails": {
    "known": false,
    "muted": false,
    "flaky": false,
    "message": "  Expected: OK\n  But was:  0\n",
    "trace": "NUnit.Framework.AssertionException:   Expected: OK\n  But was:  0\n\n   at NUnit.Framework.Assert.ReportFailure(String message)\n   at NUnit.Framework.Assert.ReportFailure(ConstraintResult result, String message, Object[] args)\n   at NUnit.Framework.Assert.That[TActual](TActual actual, IResolveConstraint expression, String message, Object[] args)\n   at NUnit.Framework.Assert.That[TActual](TActual actual, IResolveConstraint expression)\n   at SpecFlowPj.GetPostsStepDefinitions.ThenIExpectAValidCodeResponse() in /home/runner/work/Specflow_Report/Specflow_Report/SpecFlowPj/GetPostsStepDefinitions.cs:line 39\n   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\n   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan& duration)\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)"
  },
  "stage": "finished",
  "steps": [
    {
      "name": "Given  a valid API endpoint",
      "status": "passed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1685723112693,
      "stop": 1685723112726
    },
    {
      "name": "And  I have an id with value 1",
      "status": "passed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1685723112727,
      "stop": 1685723112894
    },
    {
      "name": "When  I send a request",
      "status": "passed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1685723112894,
      "stop": 1685723112983
    },
    {
      "name": "Then  I expect a valid code response",
      "status": "failed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1685723112983,
      "stop": 1685723113149
    }
  ],
  "attachments": [],
  "parameters": [],
  "start": 1685723112680,
  "stop": 1685723113156
}