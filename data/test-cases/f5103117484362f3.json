{"uid":"f5103117484362f3","name":"GetbyId","fullName":"GetbyId","historyId":"GetbyId","time":{"start":1685723256822,"stop":1685723257588,"duration":766},"status":"failed","statusMessage":"  Expected: OK\n  But was:  0\n","statusTrace":"NUnit.Framework.AssertionException:   Expected: OK\n  But was:  0\n\n   at NUnit.Framework.Assert.ReportFailure(String message)\n   at NUnit.Framework.Assert.ReportFailure(ConstraintResult result, String message, Object[] args)\n   at NUnit.Framework.Assert.That[TActual](TActual actual, IResolveConstraint expression, String message, Object[] args)\n   at NUnit.Framework.Assert.That[TActual](TActual actual, IResolveConstraint expression)\n   at SpecFlowPj.GetPostsStepDefinitions.ThenIExpectAValidCodeResponse() in /home/runner/work/Specflow_Report/Specflow_Report/SpecFlowPj/GetPostsStepDefinitions.cs:line 39\n   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\n   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan& duration)\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":9,"retriesStatusChange":true,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"  Expected: OK\n  But was:  0\n","statusTrace":"NUnit.Framework.AssertionException:   Expected: OK\n  But was:  0\n\n   at NUnit.Framework.Assert.ReportFailure(String message)\n   at NUnit.Framework.Assert.ReportFailure(ConstraintResult result, String message, Object[] args)\n   at NUnit.Framework.Assert.That[TActual](TActual actual, IResolveConstraint expression, String message, Object[] args)\n   at NUnit.Framework.Assert.That[TActual](TActual actual, IResolveConstraint expression)\n   at SpecFlowPj.GetPostsStepDefinitions.ThenIExpectAValidCodeResponse() in /home/runner/work/Specflow_Report/Specflow_Report/SpecFlowPj/GetPostsStepDefinitions.cs:line 39\n   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\n   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan& duration)\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)","steps":[{"name":"Given  a valid API endpoint","time":{"start":1685723256829,"stop":1685723256850,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"And  I have an id with value 1","time":{"start":1685723256850,"stop":1685723256973,"duration":123},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When  I send a request","time":{"start":1685723256974,"stop":1685723257380,"duration":406},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then  I expect a valid code response","time":{"start":1685723257380,"stop":1685723257584,"duration":204},"status":"failed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"thread","value":"NonParallelWorker"},{"name":"host","value":"fv-az309-260"},{"name":"feature","value":"GetPosts"},{"name":"tag","value":"tag1"},{"name":"tag","value":"smoke"},{"name":"tag","value":"regression"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6d4843530a3f7ed8","status":"passed","time":{"start":1685722509413,"stop":1685722509707,"duration":294}},{"uid":"f8a21c6a97059b7","status":"passed","time":{"start":1685719539516,"stop":1685719539601,"duration":85}},{"uid":"2bf922faeb0c11d8","status":"passed","time":{"start":1685719498283,"stop":1685719498369,"duration":86}},{"uid":"6615e17ff821104","status":"passed","time":{"start":1685719489075,"stop":1685719489161,"duration":86}},{"uid":"3bfba30a44fc1f0","status":"passed","time":{"start":1685719476201,"stop":1685719476326,"duration":125}},{"uid":"fb03eb0971de7f0e","status":"passed","time":{"start":1685718249756,"stop":1685718249842,"duration":86}},{"uid":"4c71ab81a020546b","status":"passed","time":{"start":1685716350891,"stop":1685716350978,"duration":87}},{"uid":"50ab17e28ebcd474","status":"passed","time":{"start":1685716343636,"stop":1685716343728,"duration":92}},{"uid":"1abbf865e7af6c29","status":"failed","statusDetails":"  Expected: OK\r\n  But was:  0\r\n","time":{"start":1685716286579,"stop":1685716291145,"duration":4566}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["tag1","regression","smoke"]},"source":"f5103117484362f3.json","parameterValues":[]}