{"uid":"9b301a04a9eb08de","name":"GetbyId","fullName":"GetbyId","historyId":"GetbyId","time":{"start":1685723456239,"stop":1685723457097,"duration":858},"status":"failed","statusMessage":"  Expected: OK\n  But was:  0\n","statusTrace":"NUnit.Framework.AssertionException:   Expected: OK\n  But was:  0\n\n   at NUnit.Framework.Assert.ReportFailure(String message)\n   at NUnit.Framework.Assert.ReportFailure(ConstraintResult result, String message, Object[] args)\n   at NUnit.Framework.Assert.That[TActual](TActual actual, IResolveConstraint expression, String message, Object[] args)\n   at NUnit.Framework.Assert.That[TActual](TActual actual, IResolveConstraint expression)\n   at SpecFlowPj.GetPostsStepDefinitions.ThenIExpectAValidCodeResponse() in /home/runner/work/Specflow_Report/Specflow_Report/SpecFlowPj/GetPostsStepDefinitions.cs:line 39\n   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\n   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan& duration)\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":9,"retriesStatusChange":true,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"  Expected: OK\n  But was:  0\n","statusTrace":"NUnit.Framework.AssertionException:   Expected: OK\n  But was:  0\n\n   at NUnit.Framework.Assert.ReportFailure(String message)\n   at NUnit.Framework.Assert.ReportFailure(ConstraintResult result, String message, Object[] args)\n   at NUnit.Framework.Assert.That[TActual](TActual actual, IResolveConstraint expression, String message, Object[] args)\n   at NUnit.Framework.Assert.That[TActual](TActual actual, IResolveConstraint expression)\n   at SpecFlowPj.GetPostsStepDefinitions.ThenIExpectAValidCodeResponse() in /home/runner/work/Specflow_Report/Specflow_Report/SpecFlowPj/GetPostsStepDefinitions.cs:line 39\n   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\n   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan& duration)\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)","steps":[{"name":"Given  a valid API endpoint","time":{"start":1685723456246,"stop":1685723456267,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"And  I have an id with value 1","time":{"start":1685723456268,"stop":1685723456611,"duration":343},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"When  I send a request","time":{"start":1685723456612,"stop":1685723456928,"duration":316},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"Then  I expect a valid code response","time":{"start":1685723456928,"stop":1685723457093,"duration":165},"status":"failed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":4},"afterStages":[],"labels":[{"name":"thread","value":"NonParallelWorker"},{"name":"host","value":"fv-az448-929"},{"name":"feature","value":"GetPosts"},{"name":"tag","value":"tag1"},{"name":"tag","value":"smoke"},{"name":"tag","value":"regression"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ac989f7b0433d158","status":"passed","time":{"start":1685722509413,"stop":1685722509707,"duration":294}},{"uid":"4c6cfb9908faf6ce","status":"passed","time":{"start":1685719539516,"stop":1685719539601,"duration":85}},{"uid":"4a39f5425f2123","status":"passed","time":{"start":1685719498283,"stop":1685719498369,"duration":86}},{"uid":"b113c75aa4c66033","status":"passed","time":{"start":1685719489075,"stop":1685719489161,"duration":86}},{"uid":"b68a747edacd6865","status":"passed","time":{"start":1685719476201,"stop":1685719476326,"duration":125}},{"uid":"66577bb68fbad1a6","status":"passed","time":{"start":1685718249756,"stop":1685718249842,"duration":86}},{"uid":"86bfbaead76ae5dd","status":"passed","time":{"start":1685716350891,"stop":1685716350978,"duration":87}},{"uid":"2ef42a8d5dc2e16d","status":"passed","time":{"start":1685716343636,"stop":1685716343728,"duration":92}},{"uid":"cc88367a6213135b","status":"failed","statusDetails":"  Expected: OK\r\n  But was:  0\r\n","time":{"start":1685716286579,"stop":1685716291145,"duration":4566}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["tag1","regression","smoke"]},"source":"9b301a04a9eb08de.json","parameterValues":[]}